package com.sloyt.leetcode.java.p2780;

import com.sloyt.leetcode.java.TestSolution;
import junit.framework.TestCase;

import java.util.Arrays;

public class SolutionTest extends TestCase implements TestSolution {

    @Override
    public void testRun() {
        Solution solution = new Solution();

        assertEquals(2, solution.minimumIndex(Arrays.asList(1, 2, 2, 2)));
        assertEquals(4, solution.minimumIndex(Arrays.asList(2, 1, 3, 1, 1, 1, 7, 1, 2, 1)));
        assertEquals(-1, solution.minimumIndex(Arrays.asList(3, 3, 3, 3, 7, 2, 2)));

        assertEquals(-1, solution.minimumIndex(Arrays.asList(1)));
        assertEquals(0, solution.minimumIndex(Arrays.asList(1, 2, 1, 1)));

        assertEquals(2, solution.minimumIndex(Arrays.asList(7, 3, 3, 3, 3, 3, 2, 2, 3, 3)));
        assertEquals(4, solution.minimumIndex(Arrays.asList(9, 2, 10, 2, 2, 5, 8, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 10, 9, 2, 2, 2, 2, 1, 2, 6, 2, 10, 2, 7, 1, 2, 2, 2, 4, 2, 2, 2, 8, 2, 2, 2, 6, 3, 2, 9, 10, 5, 5, 4, 10, 2, 8, 9, 2, 1, 1)));
        assertEquals(34, solution.minimumIndex(Arrays.asList(8, 7, 2, 1, 7, 6, 7, 4, 7, 7, 4, 1, 7, 8, 4, 9, 7, 7, 1, 7, 7, 3, 1, 7, 7, 8, 1, 7, 2, 7, 7, 7, 3, 7, 7, 9, 7, 7, 2, 10, 10, 7, 7, 7, 7, 7, 7, 6, 9, 3, 6, 5, 7, 2, 7, 7, 8, 7, 7, 6, 7, 7, 7, 7, 7, 5, 7, 3, 5, 7, 7, 7, 7, 7, 7, 6, 2, 8, 7, 7, 1, 7, 7, 7, 3, 7, 9, 3, 1, 7, 1, 7, 8, 7, 7, 4, 7, 4, 5, 2, 7, 7, 10, 7, 7, 7, 5, 7, 7, 1, 7, 4, 4, 4, 1, 7, 9, 5, 2, 7, 7, 2, 7, 8, 7, 8, 2, 6, 4, 9, 2, 7, 2, 7, 5, 7, 7, 7, 7, 3, 7, 8, 8, 7, 10, 7, 7, 7, 5, 7, 7, 8, 7, 7, 9, 5, 6, 3, 4, 7, 3, 7, 9, 9, 7, 1, 7, 1, 7, 7, 6, 7, 4, 1, 2, 8, 10, 1, 4, 1, 7, 7, 4, 3, 5, 8, 7, 9, 7, 4, 9, 7, 7, 7, 2, 7, 7, 9, 7, 1, 3, 10, 7, 7, 10, 7, 2, 7, 8, 7, 7, 8, 7, 1, 7, 7, 5, 7, 7, 7, 2, 2, 7, 7, 7, 7, 5, 7, 7, 9, 6, 8, 7, 7, 2, 7, 7, 7, 10, 7, 10, 2, 2, 3, 4, 10, 7, 4, 8, 10, 7, 2, 7, 7, 7, 7, 1, 7, 7, 2, 4, 9, 2, 5, 7, 7, 3, 7, 7, 7, 7, 9, 7, 7, 9, 2, 7, 6, 7, 8, 7, 1, 7, 7, 7, 2, 8, 7, 7, 9, 7, 7, 7, 9, 3, 4, 7, 7, 7, 4, 7, 1, 7, 8, 8, 7, 5, 7, 7, 7, 3, 7, 7, 5, 6, 7, 7, 7, 7, 1, 7, 7, 7, 7, 9, 7, 7, 7, 2, 7, 7, 7, 7, 7, 1, 7, 7, 3, 7, 7, 7, 4, 7, 9, 7, 7, 2, 2, 9, 6, 7, 6, 4, 10, 2, 3, 9, 2, 7, 7, 9, 4, 10, 7, 4, 7, 7, 4, 3, 7, 7, 5, 7, 5, 7, 7, 1, 3, 3, 1, 10, 7, 2, 7, 8, 6, 7, 8, 5, 7, 10, 3, 8, 9, 3, 1, 7, 7, 7, 6, 4, 9, 7, 7, 7, 5, 7, 2, 5, 1, 7, 7, 7, 7, 1, 7, 7, 7, 3, 7, 8, 4, 6, 2, 7, 7, 4, 1, 10, 7, 3, 9, 7, 7, 7, 5, 7, 7, 9, 5, 4, 7, 7, 1, 1, 9, 5, 4, 10, 7, 3, 1, 7, 7, 7, 7, 4, 8, 7, 1, 6, 7, 7, 2, 7, 7, 7, 7, 7, 1, 7, 8, 9, 7, 7, 7, 7, 7, 4, 7, 10, 7, 9, 7, 5, 7, 4, 7, 7, 2, 7, 7, 7, 7, 5, 9, 7, 7, 7, 7, 2, 3, 7, 4, 6, 7, 7, 4, 7, 1, 7, 7, 3, 10, 7, 7, 7, 9, 7, 9, 2, 7, 2, 10, 5, 7, 8, 8, 2, 8, 7, 7, 9, 5)));
    }
}
